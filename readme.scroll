import header.scroll
title TrueBase

# Information you can trust

image logo.png

startColumns 2

? What is TrueBase?
* TrueBase is a new kind of database designed from the ground up for trust.

? Why TrueBase?
* We live in an age of lies: of propaganda, advertisements, paywalls, trackers, licenses, proprietary formats, unnecessarily complex languages, patents—an information wasteland. TrueBase is the _only database that makes no compromises on truth_. Everything in TrueBase is designed to provide end users with an ever increasing amount of truth.

? What are the features?
- Data is stored in plain text
- Zero syntax
- Every word is error checked
- Version control and blockchain handled by git
- One notation for data, schema, querying, and visualization
- Entire schema and data can be pivoted in a single commit
- Everything is public domain

? What are some example TrueBases?
* PLDB
 https://pldb.com
* CancerDB
 https://cancerdb.com

? Can I pay you to build one for me?
* Yes. We offer a complete white-glove service for mission critical problems.
 https://buy.stripe.com/cN2aIq82JfD7fqU9AJ white-glove service

? How do I get started?
* Documentation is still sparse, but you can try the sample TrueBase:

code
 git clone https://github.com/breck7/truebase
 cd truebase
 npm install .
 ./PlanetsDB.js

? How does it work, in theory?
* TrueBase is built on groundbreaking new work into Cellular Programming Languages. Unlike traditional languages and encodings which are one-dimensional, TrueBase uses higher dimensions and context-sensitivity to minimize noise and increase the interconnectedness of the data. In TrueBase, it becomes increasingly difficult to lie as the size of the TrueBase increases.

? How does TrueBase work, in practice?
* In TrueBase, you store your data in plain text files. This means your data is readily accessible—you can even view and edit it by hand.
* You put your data in Tree Notation form.  This means your data is all signal—no noise. This ensures you've minimized your data and made it as clean as possible, making it timeless. No matter what format you need your data in the future it will be perfectly preserved in the simplest form possible. You will never regret putting your data in a TrueBase.
 https://treenotation.org Tree Notation
* A growing ecosystem of tooling makes it easy to augment your TrueBase with data from Large Language Models, web crawlers, and APIs, and run integrity checks, steadily making your TrueBase truer and truer.
* You write your TrueBase schemas using the Grammar Language (a Tree Language) which enforces correctness, autofixes errors, and gives you tooling like autocomplete and syntax highlighting.
 https://jtree.treenotation.org/langs/grammar Grammar Language
* You can query your TrueBase using TQL (also a Tree Language).
 https://truebase.pub/tql TQL
* You can display your data using Scroll (also a Tree Language).
 https://scroll.pub Scroll
* So there are many pieces to the TrueBase system, but really just one thing to learn: Tree Notation. Your data, your query language, your schemas, your display language are all in these simple plain text Tree Languages.

? On what systems does TrueBase run?
* TrueBase runs on Tree Languages, and currently the last mile code is written in Javascript. Therefore TrueBase can run on any device supporting modern Javascript.

? Is TrueBase public domain?
* Yes. TrueBase is public domain and is designed for public domain databases.

? Since TrueBase is so simple, what hasn't it been done before?
* For large databases, TrueBase requires fast computers and fast SSD hard drives. TrueBue was not possible before the Apple M1s, which shipped in December 2020. Here is a post about early unsuccessful attempts at using TrueBase before Apple M1s.
 https://breckyunits.com/building-a-treebase-with-6.5-million-files.html early unsuccessful attempts

permalink index.html

import footer.scroll